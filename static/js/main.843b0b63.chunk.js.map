{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","resultado","obtenerRecetas","Formulario","guardarBusqueda","useContext","obtenerDatosRecetas","e","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","key","strCategory","ModalContext","ModalProvider","idreceta","guardarIdReceta","informacion","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","overflow","height","maxHeight","display","header","borderBottom","content","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.843b0b63.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-alert\">\r\n      <h1>Busca Recetas de Bebidas</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//Context\r\nexport const CategoriasContext = createContext();\r\n\r\n//Provider (funciones y state)\r\nconst CategoriasProvider = (props) => {\r\n  //state del context\r\n  // crear el state del Context\r\n  const [categorias, guardarCategorias] = useState([]);\r\n\r\n  // ejecutar el llamado a la api\r\n  useEffect(() => {\r\n    const obtenerCategorias = async () => {\r\n      const url = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\r\n\r\n      const categorias = await axios.get(url);\r\n\r\n      guardarCategorias(categorias.data.drinks);\r\n    };\r\n    obtenerCategorias();\r\n  }, []);\r\n\r\n  return (\r\n    <CategoriasContext.Provider value={{ categorias }}>\r\n      {props.children}\r\n    </CategoriasContext.Provider>\r\n  );\r\n};\r\nexport default CategoriasProvider;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n  const [recetas, guardarRecetas] = useState([]);\r\n  const [busqueda, buscarRecetas] = useState({\r\n    nombre: \"\",\r\n    categoria: \"\",\r\n  });\r\n\r\n  const [consultar, guardarConsultar] = useState(false);\r\n  const { nombre, categoria } = busqueda;\r\n  useEffect(() => {\r\n    if (consultar) {\r\n      const obtenerRecetas = async () => {\r\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\r\n\r\n        const resultado = await axios.get(url);\r\n        //console.log(resultado.data.drinks);\r\n        guardarRecetas(resultado.data.drinks);\r\n      };\r\n\r\n      obtenerRecetas();\r\n    }\r\n  }, [busqueda]);\r\n\r\n  return (\r\n    <RecetasContext.Provider\r\n      value={{\r\n        recetas,\r\n        buscarRecetas,\r\n        guardarConsultar\r\n      \r\n      }}>\r\n      {props.children}\r\n    </RecetasContext.Provider>\r\n  );\r\n};\r\nexport default RecetasProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { CategoriasContext } from \"../context/CategoriasContext\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nconst Formulario = () => {\r\n  //const [error, setError] = useState(false);\r\n  const [busqueda, guardarBusqueda] = useState({\r\n    nombre: \"\",\r\n    categoria: \"\",\r\n  });\r\n\r\n  const { categorias } = useContext(CategoriasContext);\r\n  const { buscarRecetas, guardarConsultar } = useContext(RecetasContext);\r\n\r\n  //Leer contenidos\r\n  const obtenerDatosRecetas = (e) => {\r\n    guardarBusqueda({\r\n      ...busqueda,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"col-12\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        buscarRecetas(busqueda);\r\n        guardarConsultar(true);\r\n      }}\r\n    >\r\n      <fieldset className=\"text-center\"></fieldset>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            name=\"nombre\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Buscar por ingrediente\"\r\n            onChange={obtenerDatosRecetas}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"categoria\"\r\n            onChange={obtenerDatosRecetas}\r\n          >\r\n            <option value=\"\">-- Seleccion Categoria --</option>\r\n            {categorias.map((categoria) => (\r\n              <option key={categoria.strCategory} value={categoria.strCategory}>\r\n                {categoria.strCategory}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-primary\"\r\n            value=\"Buscar Bebida\"\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//crear context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n  //State provider\r\n  const [idreceta, guardarIdReceta] = useState(null);\r\n  const [informacion, guardarReceta] = useState({});\r\n  //ID receta llamar API\r\n  useEffect(() => {\r\n    const obtenerReceta = async () => {\r\n      if (!idreceta) return;\r\n\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`;\r\n\r\n      const resultado = await axios.get(url);\r\n      guardarReceta(resultado.data.drinks[0]);\r\n    };\r\n    obtenerReceta();\r\n  }, [idreceta]);\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        informacion,\r\n        guardarIdReceta,\r\n        guardarReceta,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\nexport default ModalProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ModalContext } from \"../context/ModalContext\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    overflow: \"scroll\",\r\n    height: \"100%\",\r\n    maxHeight: 500,\r\n    display: \"block\",\r\n  },\r\n  header: {\r\n    padding: \"12px 0\",\r\n    borderBottom: \"1px solid darkgrey\",\r\n  },\r\n  content: {\r\n    padding: \"12px 0\",\r\n    overflow: \"scroll\",\r\n  },\r\n}));\r\n\r\nconst Receta = ({ receta }) => {\r\n  // Configuración del modal de material-ui\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //extraer valores context\r\n  const { informacion, guardarIdReceta, guardarReceta } = useContext(\r\n    ModalContext\r\n  );\r\n  //console.log(informacion);\r\n  //muestra y formatea los ingredientes\r\n  const mostrarIngredientes = (informacion) => {\r\n    let ingredientes = [];\r\n    for (let i = 1; i < 16; i++) {\r\n      if (informacion[`strIngredient${i}`]) {\r\n        ingredientes.push(\r\n          <li key={i}>\r\n            {informacion[`strIngredient${i}`]} {informacion[`strMeasure${i}`]}\r\n          </li>\r\n        );\r\n        // console.log(informacion.idDrink);\r\n      }\r\n    }\r\n    return ingredientes;\r\n  };\r\n  return (\r\n    <div className=\"col-md-4 mb3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n\r\n        <img\r\n          className=\"card_image\"\r\n          src={receta.strDrinkThumb}\r\n          alt={`Imagen de ${receta.strDrink}`}\r\n          onClick={() => {\r\n            guardarIdReceta(receta.idDrink);\r\n            handleOpen();\r\n          }}\r\n        />\r\n\r\n        <Modal\r\n          open={open}\r\n          onClose={() => {\r\n            guardarIdReceta(null);\r\n            guardarReceta({});\r\n            handleClose();\r\n          }}\r\n        >\r\n          <div style={modalStyle} className={classes.paper}>\r\n            <h2>{informacion.strDrink}</h2>\r\n            <h3 className=\"mt-4\">Instrucciones</h3>\r\n            <p>{informacion.strInstructions}</p>\r\n\r\n            <img className=\"img-fluid my-4\" src={informacion.strDrinkThumb} />\r\n\r\n            <h3>Ingredientes y cantidades</h3>\r\n            <ul>{mostrarIngredientes(informacion)}</ul>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Receta;\r\n","import React, { useContext } from \"react\";\r\nimport Receta from './Receta';\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\nconst ListaRecetas = () => {\r\n  //extraer recetas\r\n  const { recetas } = useContext(RecetasContext);\r\n  //console.log(recetas);\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            {recetas.map(receta => (\r\n                <Receta\r\n                    key={receta.idDrink}\r\n                    receta={receta}\r\n                        />\r\n            ))}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ListaRecetas;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport CategoriasProvider from \"./context/CategoriasContext\";\nimport ListaRecetas from \"./components/ListaRecetas\";\n\n//import CategoriasProvider from \"./context/CategoriasContext\";\nimport RecetasProvider from \"./context/RecetasContext\";\nimport ModalProvider from \"./context/ModalContext\";\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Header />\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Formulario />\n            </div>\n            <ListaRecetas />\n          </div>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}